// See https://github.com/dialogflow/dialogflow-fulfillment-nodejs
// for Dialogflow fulfillment library docs, samples, and to report issues
'use strict';
 
const functions = require('firebase-functions');
const {WebhookClient} = require('dialogflow-fulfillment');
const {Card, Suggestion} = require('dialogflow-fulfillment');

const admin = require('firebase-admin');
admin.initializeApp({
  credential: admin.credential.applicationDefault(),
  databaseURL: 'https://newagent-1-afa6f.firebaseio.com/',
});

 
process.env.DEBUG = 'dialogflow:debug'; // enables lib debugging statements

 
exports.dialogflowFirebaseFulfillment = functions.https.onRequest((request, response) => {
  const agent = new WebhookClient({ request, response });
  console.log('Dialogflow Request headers: ' + JSON.stringify(request.headers));
  console.log('Dialogflow Request body: ' + JSON.stringify(request.body));
 
  function welcome(agent) {
    agent.add(`Welcome to my agent!`);
  }
  
 
  function fallback(agent) {
    agent.add(`I didn't understand`);
    agent.add(`I'm sorry, can you try again?`);
  }
 function rastreio(agent) {
       return admin.database().ref('/gps').once('value').then(function(snapshot){
         snapshot.forEach(function(data) {
             agent.add('Acesse o rastreio clicando no link: '+data.child('link').val());

         });

      });

}
 
  
  function enviar(agent) {
    
   
    const tamanho=agent.parameters.tamanhopizza;
    const quantidade=agent.parameters.qtdpizza;
    const bebidas=agent.parameters.bebidas;
    var total=agent.parameters.total;
    total=0;
    	//tamanho da pizza
      if(tamanho==='G'){
        total=36.90*quantidade+total;
      }
      else if(tamanho==='GG'){
        total=44.90*quantidade+total;
      }
      else if(tamanho==='M'){
        total=27.90*quantidade+total;
      }
      else if(tamanho==='P'){
      total=19.90*quantidade+total;
      }
    //bebidas
    if(bebidas=='Pepsi 1.5L'){
      total=total+4;
    }
    else if(bebidas=='Fanta 1.5L'){
      total=total+4.5;
    }
     else if(bebidas=='Coca 1.5L'){
      total=total+5.5;
    }
    else if(bebidas=='Sprite 1.5L'){
      total=total+4.5;
    }
    else if(bebidas=='Guaran√° 1.5L'){
      total=total+4.5;
    }
     else if(bebidas=='nenhuma'){
      total=total+0;
    }
  
    
    var newKey = admin.database().ref().child('Pedido').push().key;
    admin.database().ref('Pedido/'+newKey).set({
        nome: agent.parameters.nome,
      	email: agent.parameters.email,
      	telefone: agent.parameters.telefone,
      	qtdpizza: agent.parameters.qtdpizza,
      	saborpizza: agent.parameters.saborpizza,
      	tamanhopizza: agent.parameters.tamanhopizza,
      	qtdbebida: agent.parameters.qtdbebida,
      	bebida: agent.parameters.bebidas,
      	endereco: agent.parameters.endereco,
      	pagamento: agent.parameters.pagamento,
      	total: total,
      	
    });
    

	agent.add('Seu pedido: '+'\n'+

'CLIENTE: ' +agent.parameters.nome +'\n'+
'TELEFONE: '+agent.parameters.telefone +'\n'+
'EMAIL: ' +agent.parameters.email +'\n'+
'PIZZA(S): '+agent.parameters.qtdpizza +' de ' +agent.parameters.saborpizza+'\n'+
'TAMANHO: ' +agent.parameters.tamanhopizza+'\n'+
'BEBIDA: ' +agent.parameters.qtdbebida+' ' +agent.parameters.bebidas+'\n'+
'LOCAL DE ENTREGA: ' +agent.parameters.endereco+'\n'+
'PAGAMENTO: ' +agent.parameters.pagamento+'\n'+
'TOTAL: ' +total +'R$');
agent.add('Est√° tudo correto?');
    	agent.add(new Suggestion('Sim'));
        agent.add(new Suggestion(`Modificar`));
        agent.add(new Suggestion('Cancelar'));
    


  
      
  }
  function enviargps(agent) {
    var url = 'url';
    var newKey = admin.database().ref().child('gps').push().url;
    admin.database().ref('gps/'+url).update({
        link: agent.parameters.codigo,
      	
    });
	agent.add('enviado com sucesso');
    

      
  }
  
  

  // // Uncomment and edit to make your own intent handler
  // // uncomment `intentMap.set('your intent name here', yourFunctionHandler);`
  // // below to get this function to be run when a Dialogflow intent is matched
  // function yourFunctionHandler(agent) {
  //   agent.add(`This message is from Dialogflow's Cloud Functions for Firebase editor!`);
  //   agent.add(new Card({
  //       title: `Title: this is a card title`,
  //       imageUrl: 'https://developers.google.com/actions/images/badges/XPM_BADGING_GoogleAssistant_VER.png',
  //       text: `This is the body text of a card.  You can even use line\n  breaks and emoji! üíÅ`,
  //       buttonText: 'This is a button',
  //       buttonUrl: 'https://assistant.google.com/'
  //     })
  //   );
  //   agent.add(new Suggestion(`Quick Reply`));
  //   agent.add(new Suggestion(`Suggestion`));
  //   agent.setContext({ name: 'weather', lifespan: 2, parameters: { city: 'Rome' }});
  // }

  // // Uncomment and edit to make your own Google Assistant intent handler
  // // uncomment `intentMap.set('your intent name here', googleAssistantHandler);`
  // // below to get this function to be run when a Dialogflow intent is matched
  // function googleAssistantHandler(agent) {
  //   let conv = agent.conv(); // Get Actions on Google library conv instance
  //   conv.ask('Hello from the Actions on Google client library!') // Use Actions on Google library
  //   agent.add(conv); // Add Actions on Google library responses to your agent's response
  // }
  // // See https://github.com/dialogflow/dialogflow-fulfillment-nodejs/tree/master/samples/actions-on-google
  // // for a complete Dialogflow fulfillment library Actions on Google client library v2 integration sample

  // Run the proper function handler based on the matched Dialogflow intent name
  let intentMap = new Map();
  intentMap.set('Default Welcome Intent', welcome);
  intentMap.set('Default Fallback Intent', fallback);
  intentMap.set('fazer.pedido - yes', enviar);
  intentMap.set('fazer.pedido - yes - yes', rastreio);
   intentMap.set('gps', enviargps);
  
 
 


  // intentMap.set('your intent name here', yourFunctionHandler);
  // intentMap.set('your intent name here', googleAssistantHandler);
  agent.handleRequest(intentMap);
});
